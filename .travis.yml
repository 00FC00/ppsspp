# https://travis-ci.org

language: cpp

env:
  - PPSSPP_BUILD_TYPE=Linux
  - PPSSPP_BUILD_TYPE=Android
  - PPSSPP_BUILD_TYPE=Blackberry
  - PPSSPP_BUILD_TYPE=Symbian

compiler:
  - clang
  - gcc

before_install:
  - git submodule update --init --recursive
  - sudo apt-get install aria2 -qq
# Travis uses CMake 2.8.7. We require 2.8.8 for Linux/Blackberry. Grab latest
  - if [ "$PPSSPP_BUILD_TYPE" == "Linux" ] || [ "$PPSSPP_BUILD_TYPE" == "Blackberry" ]; then
      sudo apt-get install lib32z1-dev lib32stdc++6 &&
      aria2c -x 16 http://www.cmake.org/files/v2.8/cmake-2.8.12.1-Linux-i386.sh &&
      chmod a+x cmake-2.8.12.1-Linux-i386.sh &&
      sudo ./cmake-2.8.12.1-Linux-i386.sh --skip-license --prefix=/usr;
    fi
# Linux Setup
  - if [ "$PPSSPP_BUILD_TYPE" == "Linux" ]; then
      sudo apt-get install libsdl1.2-dev -qq;
# Android NDK
  - elif [ "$PPSSPP_BUILD_TYPE" == "Android" ]; then
      NDK_VER=android-ndk-r9b
      NDK_TAR=${NDK_VER}-linux-x86_64.tar.bz2 &&
      sudo apt-get install openjdk-7-jdk ant -qq &&
      aria2c -x 16 http://dl.google.com/android/ndk/${NDK_TAR} &&
      tar -xf ${NDK_TAR} &&
      export ANDROID_HOME=$(pwd)/${NDK_VER} NDK=$(pwd)/${NDK_VER};
      if [[ "$CXX" == *clang* ]]; then export NDK_TOOLCHAIN_VERSION=clang; fi
# Blackberry NDK
  - elif [ "$PPSSPP_BUILD_TYPE" == "Blackberry" ]; then
      BB_NDK=http://downloads.blackberry.com/upr/developers/update/bbndk/ndktarget_10.2.0.1155/ndktargetrepo_10.2.0.1155/packages/
      BB_LIBS=bbndk.linux.libraries.10.2.0.1155.tar.gz &&
      BB_TOOLS=bbndk.linux.tools.10.2.0.15.tar.gz &&
      ( ( aria2c -x 16 ${BB_NDK}${BB_LIBS} https://googledrive.com/host/0B5UBD4wjtpZ-QVdzSElobzNTOU0 -o libs.tar.gz && tar -xf libs.tar.gz ) &
        ( aria2c -x 16 ${BB_NDK}${BB_TOOLS} https://googledrive.com/host/0B5UBD4wjtpZ-NV80UzFYMVRkSXM -o tools.tar.gz && tar -xf tools.tar.gz ) ) &&
      export QNX_TARGET="$(pwd)/target_10_2_0_1155/qnx6" QNX_HOST="$(pwd)/host_10_2_0_15/linux/x86" && PATH="$QNX_HOST/usr/bin:$PATH";
# Symbian NDK
  - elif [ "$PPSSPP_BUILD_TYPE" == "Symbian" ]; then
      sudo apt-get install lib32z1-dev lib32stdc++6 lib32bz2-1.0 -qq &&
      aria2c -x 16 https://googledrive.com/host/0B5UBD4wjtpZ-OEx1b1JuaFhJc3M -o ndk.tar.bz2 &&
      tar -xf ndk.tar.bz2 && sed -i "s!/home/sacha/QtSDK/Symbian!$(pwd)!" SDKs/SymbianSR1Qt474/bin/qt.conf &&
      sed -i "s!0xA00000!0xF00000!" tools/sbs/lib/config/gcce.xml &&
      export EPOCROOT=$(pwd)/SDKs/SymbianSR1Qt474 SBS_GCCE463BIN=$(pwd)/tools/gcce4/bin SBS=$(pwd)/tools/sbs &&
      ln -s $SBS/linux-x86_64-/lib/libc-\* $SBS/linux-x86_64-libc2_15 &&
      cp ffmpeg/symbian/armv6/lib/* SDKs/SymbianSR1Qt474/epoc32/release/armv5/urel/ &&
      PATH=$SBS_GCCE463BIN:$SBS/bin:$EPOCROOT/epoc32/tools:$SBS/..:$EPOCROOT/bin:$SBS/linux-x86_64-/lib/libc-\*/bin:$PATH;
    fi

script:
# Compile PPSSPP
  - if [ "$PPSSPP_BUILD_TYPE" == "Linux" ]; then
      ./b.sh --headless;
  - elif [ "$PPSSPP_BUILD_TYPE" == "Android" ]; then
      pushd android && ./ab.sh && popd;
  - elif [ "$PPSSPP_BUILD_TYPE" == "Blackberry" ]; then
      pushd Blackberry && ./build.sh --no-package && popd;
  - elif [ "$PPSSPP_BUILD_TYPE" == "Symbian" ]; then
      pushd Qt && qmake -spec symbian-sbsv2 PPSSPPQt.pro && make release-gcce -j4 && make sis && popd;
    fi

after_success:
  - if [ "$PPSSPP_BUILD_TYPE" == "Linux" ]; then ./test.py; fi

matrix:
  exclude:
    - compiler: clang
      env: PPSSPP_BUILD_TYPE=Android
    - compiler: clang
      env: PPSSPP_BUILD_TYPE=Blackberry
    - compiler: clang
      env: PPSSPP_BUILD_TYPE=Symbian
